
Frontend:
- make designs mobile-responsive
- find a version of Print Clearly that doesn't add whitespace to its []\^ characters
  - this is what was causing the weird input issue with [ ] \ ^ characters
- implement good-looking error messages, no statusText or alert() boxes
  - maybe toasts?
    - https://www.npmjs.com/package/react-toastify
- implement more attractive file upload for Profile
- use something better looking than <input type='file' ...
- add a favicon
- keyboard shortcuts
- compress (lossless) all resources as much as possible
- have Create be the interface when a user wants to edit a deck
  - this is very hard.

Backend:
- define <Route /> children in /study, create components for /study, /study/deck, /study/list, avoid defining route
children in top-level App
  - make the mode of search (decks, lists, users) a query param, and handle query param stuff in one place
- why are the loading times so ridiculous?
- how to handle deletion of personal data when deck/conceptlist is deleted?
  - automatically clear out personal data after x time of unuse?
  - make separate root-level collections of cards and concepts for personal data.
    - each card and concept has userId, deckId, same cardId
    - use queries
- automatically updating isDue field in Firestore instead of updating on retrieval
- Once Owen incorporates, upgrade Firebase acc, remove Algolia calls on server, and uncomment Cloud Functions
- should I deploy as a Node app and use a server, or deploy as a static app and use Cloud Functions?
- implement structure necessary for a study history

Fullstack:
- make sure the timestamps account for time zones (probably?)
- think of a more elegant solution to the new user's profile pic bug. (see Michael)
- use a webpack solution better than copy-webpack-plugin
- implement picture support for the decks
- refactor, refactor, refactor
  - refactor deck vs. conceptlist flow. Create.js
  - lookup bad smells common in reactjs and in javascript
  - try to limit duplicate code as much as possible
- run everything through eslint eventually
- run everything through some sort of code checker
- run security testing


Maximum input lengths:
  - deck and conceptlist titles: 150 characters
  - deck cards (front, back): 1000 characters
  - conceptlist questions: 200 characters
  - conceptlist answers: 4000 characters
