
Frontend:
- make designs mobile-responsive
- why do these keys: [ ] \ freak out the text inputs?
- implement loading icons
- implement toasts for feedback and error feedback for user
  - https://www.npmjs.com/package/react-toastify
- use something better looking than <input type='file' ...
- keyboard shortcuts
- have Create be the interface when a user wants to edit a deck

Backend:
- why are the loading times so ridiculous?
- how to handle deletion of personal data when deck/conceptlist is deleted?
  - automatically clear out personal data after x time of unuse?
  - make separate root-level collections of cards and concepts for personal data.
    - each card and concept has userId, deckId, same cardId
    - use queries
- automatically updating isDue field in Firestore instead of updating on retrieval
- should I deploy as a Node app and use a server, or deploy as a static app and use Cloud Functions?
- Once Owen incorporates, upgrade Firebase acc, remove Algolia calls on server, and uncomment Cloud Functions
- add Algolia calls for concept lists.
- implement structure necessary for a study history

Fullstack:
- handle different time zones
- implement maximum lengths for card entries (like 1000 characters)
- use a webpack solution better than copy-webpack-plugin
- think of a more elegant solution to the new user's profile pic bug. (see Michael)
- refactor, refactor, refactor
  - refactor deck vs. conceptlist flow. Create.js
  - 
- run everything through eslint eventually (before pushing to production)
- implement pictures into the decks